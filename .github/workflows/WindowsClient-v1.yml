# SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors
# SPDX-License-Identifier: GPL-2.0-or-later
name: Windows Build and Release(v1)
on:
  workflow_dispatch:

jobs:
  build:
    name: Windows Build
    runs-on: windows-2022
    env:
      CRAFT_TARGET: windows-msvc2022_64-cl
      CRAFT_MASTER_LOCATION: ${{ github.workspace }}\CraftMaster
      CRAFT_MASTER_CONFIG: ${{ github.workspace }}\craftmaster.ini

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Craft Master with Nextcloud Client Deps
        shell: pwsh
        run: |
          & cmd /C "git clone -q --depth=1 https://invent.kde.org/packaging/craftmaster.git ${{ env.CRAFT_MASTER_LOCATION }} 2>&1"
          
          function craft() {
              python "${{ env.CRAFT_MASTER_LOCATION }}\CraftMaster.py" --config "${{ env.CRAFT_MASTER_CONFIG }}" --target ${{ env.CRAFT_TARGET }} -c $args
              if($LASTEXITCODE -ne 0) {exit $LASTEXITCODE}
          }
          
          craft --add-blueprint-repository "https://github.com/nextcloud/craft-blueprints-kde.git|stable-3.17|"
          craft --add-blueprint-repository "https://github.com/nextcloud/desktop-client-blueprints.git|stable-3.17|"
          craft craft
          craft --install-deps nextcloud-client

      - name: Install inkscape
        shell: pwsh
        run: |
          choco install inkscape

      - name: Setup PATH
        shell: pwsh
        run: |
          echo "${{ github.workspace }}\${{ env.CRAFT_TARGET }}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Compile Client
        shell: pwsh
        run: |
          function craft() {
              python "${{ env.CRAFT_MASTER_LOCATION }}\CraftMaster.py" --config "${{ env.CRAFT_MASTER_CONFIG }}" --target ${{ env.CRAFT_TARGET }} -c $args
              if($LASTEXITCODE -ne 0) {exit $LASTEXITCODE}
          }
          craft --src-dir ${{ github.workspace }} nextcloud-client

      - name: Package MSI and ZIP
        shell: pwsh
        run: |
          $outDir = "${{ github.workspace }}\out"
          $binDir = "${{ github.workspace }}\${{ env.CRAFT_TARGET }}\bin"
          mkdir $outDir -Force

          # Copy runtime files
          Copy-Item -Path $binDir\* -Destination $outDir -Recurse -Force

          # Create ZIP
          $zipPath = "${{ github.workspace }}\NextcloudDesktop.zip"
          if (Test-Path $zipPath) { Remove-Item $zipPath -Force }
          Compress-Archive -Path "$outDir\*" -DestinationPath $zipPath

          # Dummy MSI packaging (replace with real MSI project if available)
          $msiPath = "${{ github.workspace }}\NextcloudDesktop.msi"
          Copy-Item $zipPath $msiPath

          echo "ZIP_PATH=$zipPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "MSI_PATH=$msiPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            ${{ env.ZIP_PATH }}
            ${{ env.MSI_PATH }}

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            NextcloudDesktop.zip
            NextcloudDesktop.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
